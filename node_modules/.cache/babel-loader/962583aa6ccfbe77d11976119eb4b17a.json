{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dewannk\\\\Desktop\\\\firebase authentication\\\\src\\\\components\\\\Auth\\\\AuthForm.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport AuthContext from '../../store/auth-context';\nimport classes from './AuthForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthForm = () => {\n  _s();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const ctx = useContext(AuthContext);\n  const history = useHistory();\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n  const submitHandler = e => {\n    e.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    // optional validation\n    setIsLoading(true);\n    let url;\n    if (isLogin) {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAuuWxHAZ1zdrtnRKKwIpzekRFMrLAIN58';\n    } else {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAuuWxHAZ1zdrtnRKKwIpzekRFMrLAIN58';\n    }\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      setIsLoading(false);\n      if (res.ok) {\n        return res.json();\n        //handle success response\n      } else {\n        return res.json().then(data => {\n          let errorMessage = 'Authentication failed';\n          throw new Error(errorMessage);\n        });\n      }\n    }).then(data => {\n      // console.log(data)\n      const expirationTime = new Date(new Date().getTime() + +data.expiresIn * 1000).toString();\n      ctx.login(data.idToken, expirationTime);\n      history.replace('/');\n    }).catch(err => {\n      alert(err.message);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          ref: emailInputRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          ref: passwordInputRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? 'Login' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 26\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sending Request...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? 'Create new account' : 'Login with existing account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthForm, \"pm7pGs4KIk71u8OQZyq1vtykp9w=\", false, function () {\n  return [useHistory];\n});\n_c = AuthForm;\nexport default AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["useRef","useState","useContext","useHistory","AuthContext","classes","AuthForm","emailInputRef","passwordInputRef","ctx","history","isLogin","setIsLogin","isLoading","setIsLoading","switchAuthModeHandler","prevState","submitHandler","e","preventDefault","enteredEmail","current","value","enteredPassword","url","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","errorMessage","Error","expirationTime","Date","getTime","expiresIn","toString","login","idToken","replace","catch","err","alert","message","auth","control","actions","toggle"],"sources":["C:/Users/Dewannk/Desktop/firebase authentication/src/components/Auth/AuthForm.js"],"sourcesContent":["import { useRef, useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport AuthContext from '../../store/auth-context';\n\nimport classes from './AuthForm.module.css';\n\nconst AuthForm = () => {\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const ctx = useContext(AuthContext);\n  const history = useHistory();\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler =(e)=>{\n    e.preventDefault();\n      const enteredEmail= emailInputRef.current.value;\n      const enteredPassword= passwordInputRef.current.value;\n\n      // optional validation\n      setIsLoading(true);\n      let url;\n    if (isLogin){\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAuuWxHAZ1zdrtnRKKwIpzekRFMrLAIN58'\n    } else {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAuuWxHAZ1zdrtnRKKwIpzekRFMrLAIN58'\n    }\n      fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true,\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then((res) => {\n      setIsLoading(false);\n      if (res.ok) {\n        return res.json();\n        //handle success response\n      } else {\n       return res.json().then((data) =>{\n          let errorMessage = 'Authentication failed';\n          throw new Error(errorMessage);\n        })\n      }\n    }).then((data) => {\n      // console.log(data)\n      const expirationTime = new Date(new Date().getTime() + (+data.expiresIn * 1000)).toString();\n      ctx.login(data.idToken, expirationTime);\n      history.replace('/')\n    })\n      .catch(err =>{\n        alert(err.message);\n    });\n  }\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input type='email' id='email' ref={emailInputRef} required />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input type='password' id='password' ref={passwordInputRef} required />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && <button>{isLogin ? 'Login' : 'Create Account'}</button>}\n          {isLoading && <p>Sending Request...</p>}\n          \n         {!isLoading &&\n          (  <button\n              type='button'\n              className={classes.toggle}\n              onClick={switchAuthModeHandler}\n            >\n              {isLogin ? 'Create new account' : 'Login with existing account'}\n            </button>)\n          }\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}