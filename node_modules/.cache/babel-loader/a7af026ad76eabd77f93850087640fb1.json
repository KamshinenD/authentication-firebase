{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dewannk\\\\Desktop\\\\firebase authentication\\\\src\\\\components\\\\Auth\\\\AuthForm.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from 'react';\nimport classes from './AuthForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthForm = () => {\n  _s();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n  const submitHandler = e => {\n    e.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    // optional validation\n    setIsLoading(true);\n    let url;\n    if (isLogin) {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAuuWxHAZ1zdrtnRKKwIpzekRFMrLAIN58';\n      fetch(url, {\n        method: 'POST',\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n          //handle success response\n        } else {\n          // setIsLoading(false);\n          res.json().then(data => {\n            let errorMessage = 'Authentication failed';\n            if (data && data.error && data.error.message) {\n              errorMessage = data.error.message;\n            }\n            alert(errorMessage);\n            throw new Error(errorMessage);\n          });\n        }\n      });\n    } else {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAuuWxHAZ1zdrtnRKKwIpzekRFMrLAIN58';\n      fetch(url, {\n        method: 'POST',\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        setIsLoading(false);\n        if (res.ok) {\n          //handle success response\n        } else {\n          // setIsLoading(false);\n          res.json().then(data => {\n            let errorMessage = 'Authentication failed';\n            if (data && data.error && data.error.message) {\n              errorMessage = data.error.message;\n            }\n            alert(errorMessage);\n          });\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          ref: emailInputRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          ref: passwordInputRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? 'Login' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 26\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sending Request...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? 'Create new account' : 'Login with existing account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthForm, \"RqwvK/AX/XkSKVStQBnmgxX0L/M=\");\n_c = AuthForm;\nexport default AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["useRef","useState","classes","AuthForm","emailInputRef","passwordInputRef","isLogin","setIsLogin","isLoading","setIsLoading","switchAuthModeHandler","prevState","submitHandler","e","preventDefault","enteredEmail","current","value","enteredPassword","url","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","errorMessage","error","message","alert","Error","auth","control","actions","toggle"],"sources":["C:/Users/Dewannk/Desktop/firebase authentication/src/components/Auth/AuthForm.js"],"sourcesContent":["import { useRef, useState } from 'react';\n\nimport classes from './AuthForm.module.css';\n\nconst AuthForm = () => {\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler =(e)=>{\n    e.preventDefault();\n      const enteredEmail= emailInputRef.current.value;\n      const enteredPassword= passwordInputRef.current.value;\n\n      // optional validation\n      setIsLoading(true);\n      let url;\n      if (isLogin){\n        url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAuuWxHAZ1zdrtnRKKwIpzekRFMrLAIN58'\n        fetch(url, {\n          method: 'POST',\n          body: JSON.stringify({\n            email: enteredEmail,\n            password: enteredPassword,\n            returnSecureToken: true,\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }\n        ).then((res) => {\n          setIsLoading(false);\n          if (res.ok) {\n            return res.json();\n            //handle success response\n          } else {\n            // setIsLoading(false);\n            res.json().then(data =>{\n              let errorMessage = 'Authentication failed';\n              if(data && data.error && data.error.message){\n                errorMessage = data.error.message;\n              } \n              alert(errorMessage)\n              throw new Error(errorMessage)\n            })\n          }\n        });\n        \n      } else{\n        url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAuuWxHAZ1zdrtnRKKwIpzekRFMrLAIN58'\n        fetch(url, {\n          method: 'POST',\n          body: JSON.stringify({\n            email: enteredEmail,\n            password: enteredPassword,\n            returnSecureToken: true,\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }\n        ).then((res) => {\n          setIsLoading(false);\n          if (res.ok) {\n            //handle success response\n          } else {\n            // setIsLoading(false);\n            res.json().then(data =>{\n              let errorMessage = 'Authentication failed';\n              if(data && data.error && data.error.message){\n                errorMessage = data.error.message;\n              } \n              alert(errorMessage)\n            })\n          }\n        });\n      }\n    }\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input type='email' id='email' ref={emailInputRef} required />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input type='password' id='password' ref={passwordInputRef} required />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && <button>{isLogin ? 'Login' : 'Create Account'}</button>}\n          {isLoading && <p>Sending Request...</p>}\n          \n         {!isLoading &&\n          (  <button\n              type='button'\n              className={classes.toggle}\n              onClick={switchAuthModeHandler}\n            >\n              {isLogin ? 'Create new account' : 'Login with existing account'}\n            </button>)\n          }\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}